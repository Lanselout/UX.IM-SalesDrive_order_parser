import time
from datetime import datetime, timezone, timedelta
from dotenv import load_dotenv

from auth import get_x_token
from fetch_from_uxim_api import fetch_orders_from_uxim
from mapper import map_order_for_salesdrive
from send_to_crm import send_to_crm
from update_ux_order import update_ux_order
from sync_tracker import get_last_sync_time, update_last_sync_time
from sync_catalog_with_yml import sync_catalog
from catalog_sync_tracker import read_last_catalog_sync_time, write_catalog_sync_time

load_dotenv()

SYNC_INTERVAL = 15 * 60  # 15 –º–∏–Ω—É—Ç
CATALOG_SYNC_INTERVAL_HOURS = 1  # —Ä–∞–∑ –≤ 1 —á–∞—Å

def main():
    while True:
        print("üöÄ –°—Ç–∞—Ä—Ç —Ü–∏–∫–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏", flush=True)

        try:
            token = get_x_token()
            if not token:
                print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç.", flush=True)
                time.sleep(SYNC_INTERVAL)
                continue

            now_utc = datetime.now(timezone.utc)

            # üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞
            last_catalog_sync = read_last_catalog_sync_time()
            if not last_catalog_sync or (now_utc - last_catalog_sync >= timedelta(hours=CATALOG_SYNC_INTERVAL_HOURS)):
                print("üîÑ –ü–æ—Ä–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å YML...", flush=True)
                try:
                    sync_catalog()
                    write_catalog_sync_time(now_utc)
                    print(f"‚úÖ –ö–∞—Ç–∞–ª–æ–≥ —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ {now_utc.isoformat()}", flush=True)
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞: {e}", flush=True)

            # üì¶ –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º NEW
            orders = fetch_orders_from_uxim(token)

            if not orders:
                print("üì≠ –ù–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç.", flush=True)
            else:
                for order in orders:
                    try:
                        mapped = map_order_for_salesdrive(order)
                        success = send_to_crm(mapped)

                        if success:
                            update_ux_order(order_id=order.get("id"), new_status="process", x_token=token)
                            print(f"‚úÖ –ó–∞–∫–∞–∑ #{order.get('id')} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ CRM –∏ –æ–±–Ω–æ–≤–ª—ë–Ω –≤ UXIM", flush=True)
                        else:
                            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ #{order.get('id')} –≤ CRM", flush=True)
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞ #{order.get('id')}: {e}", flush=True)
                        print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–∫–∞–∑: {order}", flush=True)

            # üìù –û–±–Ω–æ–≤–ª—è–µ–º last_sync –ø–æ –∑–∞–∫–∞–∑–∞–º
            update_last_sync_time(now_utc)

        except KeyboardInterrupt:
            print("\nüõë –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.", flush=True)
            break
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ü–∏–∫–ª–∞: {e}", flush=True)

        print(f"‚è≥ –ñ–¥–µ–º {SYNC_INTERVAL // 60} –º–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞...\n", flush=True)
        time.sleep(SYNC_INTERVAL)

if __name__ == "__main__":
    main()
