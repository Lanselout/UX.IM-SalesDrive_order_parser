# main.py

import time
from datetime import datetime, timezone, timedelta
from dotenv import load_dotenv

from auth import get_x_token
from fetch_from_uxim_api import fetch_orders_from_uxim
from mapper import map_order_for_salesdrive
from send_to_crm import send_to_crm
from update_ux_order import update_ux_order
from catalog_sync_tracker import read_last_catalog_sync_time, write_catalog_sync_time
from sync_catalog_with_yml import sync_catalog

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤
ORDER_SYNC_INTERVAL_SECONDS = 15 * 60   # 15 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
CATALOG_SYNC_INTERVAL_HOURS = 1         # 24 —á–∞—Å–∞

def main():
    print("üöÄ –°—Ç–∞—Ä—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≤–æ—Ä–∫–µ—Ä–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤ –∏ –∫–∞—Ç–∞–ª–æ–≥–∞...")

    last_catalog_sync = read_last_catalog_sync_time()

    while True:
        now = datetime.now(timezone.utc)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞
        if (last_catalog_sync is None) or (now - last_catalog_sync >= timedelta(hours=CATALOG_SYNC_INTERVAL_HOURS)):
            print("üîÑ –ü–æ—Ä–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å YML...")
            try:
                sync_catalog()
                write_catalog_sync_time(now)
                print(f"‚úÖ –ö–∞—Ç–∞–ª–æ–≥ —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ {now.isoformat()}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞: {e}")

        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤
        try:
            x_token = get_x_token()
            if not x_token:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å X-TOKEN. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª...")
                time.sleep(ORDER_SYNC_INTERVAL_SECONDS)
                continue

            orders = fetch_orders_from_uxim(x_token)

            if not orders:
                print("üì≠ –ù–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç.")
            else:
                for order in orders:
                    order_id = order.get("id")
                    print(f"üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞ #{order_id}")

                    mapped_order = map_order_for_salesdrive(order)
                    success = send_to_crm(mapped_order)

                    if success:
                        update_ux_order(order_id, "processing", x_token)
                        print(f"‚úÖ –ó–∞–∫–∞–∑ #{order_id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ CRM –∏ –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ —Å–∞–π—Ç–µ UXIM.")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ #{order_id} –≤ CRM.")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤: {e}")

        print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ {ORDER_SYNC_INTERVAL_SECONDS // 60} –º–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–∫–∞–∑–æ–≤...\n")
        time.sleep(ORDER_SYNC_INTERVAL_SECONDS)

if __name__ == "__main__":
    main()
